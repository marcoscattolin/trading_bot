#  Copyright (c) 2024, Boston Consulting Group.
#  Authors: Marco Scattolin
#  License: Proprietary

# Builder step used to download and configure spark environment
FROM ubuntu:22.04

USER root

ARG PYTHON_VERSION
ARG DEBIAN_FRONTEND=noninteractive
ARG TZ=Etc/UTC
ENV LC_ALL=C.UTF-8
ENV PATH=$PATH:/root/.local/bin

# +++ AIRFLOW +++
ARG AIRFLOW_USERNAME
ARG AIRFLOW_EMAIL
ARG AIRFLOW_FIRSTNAME
ARG AIRFLOW_LASTNAME
ARG AIRFLOW_PASSWORD
# --- AIRFLOW ---

# update
RUN apt-get update

# libraries
RUN apt-get install -y  \
    wget  \
    python${PYTHON_VERSION}  \
    python${PYTHON_VERSION}-distutils

# set default python3
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 1

# Install pip
RUN wget "https://bootstrap.pypa.io/get-pip.py" -O get-pip.py --no-check-certificate
RUN python3 get-pip.py

# Copy project files
COPY pyproject.toml /opt
COPY README.md /opt
COPY src /opt/src

# Install .toml dependencies
RUN pip install --upgrade pip poetry
RUN poetry config virtualenvs.create false
RUN cd /opt && poetry install --with airflow

# setup jupyter notebook
RUN /usr/local/bin/jupyter-notebook --generate-config \
    && echo "c.NotebookApp.allow_root=True" >> /root/.jupyter/jupyter_notebook_config.py \
    && echo "c.NotebookApp.ip='0.0.0.0'" >> /root/.jupyter/jupyter_notebook_config.py

# +++ AIRFLOW +++
# init airflow
ENV AIRFLOW__CORE__LOAD_EXAMPLES=False
RUN airflow db init
RUN airflow users create --role Admin --username ${AIRFLOW_USERNAME} --email ${AIRFLOW_EMAIL} --firstname ${AIRFLOW_FIRSTNAME} --lastname ${AIRFLOW_LASTNAME} --password ${AIRFLOW_PASSWORD}
# --- AIRFLOW ---

WORKDIR /opt
